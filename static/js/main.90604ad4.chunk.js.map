{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","mystyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","navtitle","home","abouttext","onClick","togglemode","htmlFor","switchtxt","placeholder","Textform","useState","text","settext","heading","value","onChange","event","target","rows","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","heading2","split","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setmode","setswitchtxt","setalert","message","setTimeout","cls","document","body","title","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90604ad4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [mystyle, setmystyle] = useState({\r\n    //     backgroundColor: \"white\",\r\n    //     color: \"black\"\r\n    // })\r\n    let mystyle = {\r\n        color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        backgroundColor: props.mode === \"dark\" ? \"#2f3b76\" : \"white\",\r\n        \r\n    }\r\n    return (\r\n        <div className=\"container my-5\" style={mystyle}>\r\n            <h1 className=\"heading\">About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button  collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.navtitle}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  {props.home}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.abouttext}\r\n                </Link>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.abouttext}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <div className=\"d-flex\">\r\n              <div className=\"bg-primary rounded mx-2\" onClick={() => { props.togglemode('primary') }} style={{height:'30px',width:'30px'}}></div>\r\n              <div className=\"bg-success rounded mx-2\" onClick={() => { props.togglemode('success') }} style={{height:'30px',width:'30px'}}></div>\r\n              <div className=\"bg-warning rounded mx-2\" onClick={() => { props.togglemode('warning') }} style={{height:'30px',width:'30px'}}></div>\r\n              <div className=\"bg-danger rounded mx-2\" onClick={() => { props.togglemode('danger') }} style={{height:'30px',width:'30px'}}></div>\r\n            </div> */}\r\n            <div className={`form-check form-switch mx-2 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`} >\r\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.switchtxt}</label>\r\n            </div>\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  navtitle: PropTypes.string.isRequired,\r\n  abouttext: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  navtitle: 'set title here',\r\n  abouttext: 'About1',\r\n  home: 'Home'\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n    const handleupclick = () => {\r\n        if (text !== '') {\r\n            let newtext = text.toUpperCase()\r\n            settext(newtext)\r\n            props.showAlert('Converted to UpperCase', 'success')\r\n        }\r\n        else {\r\n            props.showAlert(`Plz enter some characters`, 'warning')\r\n        }\r\n    }\r\n    const handleloclick = () => {\r\n        if (text !== '') {\r\n            let newtext = text.toLowerCase()\r\n            settext(newtext)\r\n            props.showAlert('Converted to LowerCase', 'success')\r\n        }\r\n        else {\r\n            props.showAlert(`Plz enter some characters`, 'warning')\r\n        }\r\n    }\r\n    const handleonchange = (event) => {\r\n        settext(event.target.value)\r\n    }\r\n    const [text, settext] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === \"light\" ? 'black' : 'white' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea\r\n                        value={text}\r\n                        onChange={handleonchange}\r\n                        style={{ backgroundColor: props.mode === \"light\" ? \"white\" : \"#445f97\", color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n                        className=\"form-control\"\r\n                        placeholder='Enter text here'\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        rows=\"7\"\r\n                    ></textarea>\r\n                    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleupclick}>Convert to UpperCase</button>\r\n                    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleloclick}>Convert to LowerCase</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === \"light\" ? 'black' : 'white' }}>\r\n                <h2>{props.heading2}</h2>\r\n                <p>Total words {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} | Total characters {text.length}</p>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toUpperCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n            {props.alert && <div>\r\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)} </strong>{props.alert.msg}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [switchtxt, setswitchtxt] = useState(\"Enable Dark Mode\");\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  };\n  // const removeClass=()=>{\n  //   document.body.classList.remove('bg-primary')\n  //   document.body.classList.remove('bg-success')\n  //   document.body.classList.remove('bg-warning')\n  //   document.body.classList.remove('bg-danger')\n  // }\n  const togglemode = (cls) => {\n    // removeClass()\n    // console.log(cls)\n    // document.body.classList.add('bg-'+cls)\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      setswitchtxt(\"Disable Dark Mode\");\n      document.body.style.backgroundColor = \"#1d254c\";\n      document.title = \"TextUtils - DarkMode\"\n      // document.body.style.color=\"white\"\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setmode(\"light\");\n      setswitchtxt(\"Enable Dark Mode\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"TextUtils - LightMode\"\n      // document.body.style.color=\"black\"\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          navtitle=\"TextUtils\"\n          mode={mode}\n          togglemode={togglemode}\n          switchtxt={switchtxt}\n        />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About\n                mode={mode}\n              />\n            </Route>\n            <Route exact path=\"/\">\n              <Textform\n                heading=\"Enter the text to analyze\"\n                mode={mode}\n                showAlert={showAlert}\n                heading2=\"Your Text Summary\"\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}